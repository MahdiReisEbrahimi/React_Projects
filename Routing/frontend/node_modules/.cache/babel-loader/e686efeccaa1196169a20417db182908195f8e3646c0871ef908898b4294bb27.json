{"ast":null,"code":"var _jsxFileName = \"/media/mehdi_e2/New Volume/React_Projects/Routing/frontend/src/App.js\";\nimport { createBrowserRouter, RouterProvider } from \"react-router-dom\";\nimport HomePage from \"./dummyComponents/HomePage\";\nimport EventsPage from \"./dummyComponents/EventsPage\";\nimport EventDetailPage from \"./dummyComponents/EventDetailPage\";\nimport NewEventPage from \"./dummyComponents/NewEventPage\";\nimport EditEventPage from \"./dummyComponents/EditEventPage\";\nimport Root from \"./dummyComponents/Root\";\nimport EventRootLayout from \"./dummyComponents/EventRootLayout\";\nimport { eventsLoader } from \"./dummyComponents/EventsPage\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n\n// 4. Add properly working links to the MainNavigation\n\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter([{\n  path: \"/\",\n  element: /*#__PURE__*/_jsxDEV(Root, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 14\n  }, this),\n  children: [{\n    path: \"/\",\n    element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 29\n    }, this)\n  }, {\n    path: \"/events\",\n    element: /*#__PURE__*/_jsxDEV(EventRootLayout, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 18\n    }, this),\n    children: [{\n      path: \"/events\",\n      element: /*#__PURE__*/_jsxDEV(EventsPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 22\n      }, this),\n      loader: eventsLoader\n    }, {\n      path: \"/events/:eventId\",\n      element: /*#__PURE__*/_jsxDEV(EventDetailPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 48\n      }, this)\n    }, {\n      path: \"/events/new\",\n      element: /*#__PURE__*/_jsxDEV(NewEventPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 43\n      }, this)\n    }, {\n      path: \"/events/:eventId/edit\",\n      element: /*#__PURE__*/_jsxDEV(EditEventPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 53\n      }, this)\n    }]\n  }]\n}]);\n\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["createBrowserRouter","RouterProvider","HomePage","EventsPage","EventDetailPage","NewEventPage","EditEventPage","Root","EventRootLayout","eventsLoader","jsxDEV","_jsxDEV","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","children","loader","App","_c","$RefreshReg$"],"sources":["/media/mehdi_e2/New Volume/React_Projects/Routing/frontend/src/App.js"],"sourcesContent":["import { createBrowserRouter, RouterProvider } from \"react-router-dom\";\nimport HomePage from \"./dummyComponents/HomePage\";\nimport EventsPage from \"./dummyComponents/EventsPage\";\nimport EventDetailPage from \"./dummyComponents/EventDetailPage\";\nimport NewEventPage from \"./dummyComponents/NewEventPage\";\nimport EditEventPage from \"./dummyComponents/EditEventPage\";\nimport Root from \"./dummyComponents/Root\";\nimport EventRootLayout from \"./dummyComponents/EventRootLayout\";\nimport { eventsLoader } from \"./dummyComponents/EventsPage\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n\n// 4. Add properly working links to the MainNavigation\n\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n\nconst router = createBrowserRouter([\n  {\n    path: \"/\",\n    element: <Root />,\n    children: [\n      { path: \"/\", element: <HomePage /> },\n      {\n        path: \"/events\",\n        element: <EventRootLayout />,\n        children: [\n          {\n            path: \"/events\",\n            element: <EventsPage />,\n            loader: eventsLoader,\n          },\n          { path: \"/events/:eventId\", element: <EventDetailPage /> },\n          { path: \"/events/new\", element: <NewEventPage /> },\n          { path: \"/events/:eventId/edit\", element: <EditEventPage /> },\n        ],\n      },\n    ],\n  },\n]);\n\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nfunction App() {\n  return <RouterProvider router={router} />;\n}\n\nexport default App;\n"],"mappings":";AAAA,SAASA,mBAAmB,EAAEC,cAAc,QAAQ,kBAAkB;AACtE,OAAOC,QAAQ,MAAM,4BAA4B;AACjD,OAAOC,UAAU,MAAM,8BAA8B;AACrD,OAAOC,eAAe,MAAM,mCAAmC;AAC/D,OAAOC,YAAY,MAAM,gCAAgC;AACzD,OAAOC,aAAa,MAAM,iCAAiC;AAC3D,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,eAAe,MAAM,mCAAmC;AAC/D,SAASC,YAAY,QAAQ,8BAA8B;AAC3D;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,MAAM,GAAGZ,mBAAmB,CAAC,CACjC;EACEa,IAAI,EAAE,GAAG;EACTC,OAAO,eAAEH,OAAA,CAACJ,IAAI;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EACjBC,QAAQ,EAAE,CACR;IAAEN,IAAI,EAAE,GAAG;IAAEC,OAAO,eAAEH,OAAA,CAACT,QAAQ;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAE,CAAC,EACpC;IACEL,IAAI,EAAE,SAAS;IACfC,OAAO,eAAEH,OAAA,CAACH,eAAe;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;IAC5BC,QAAQ,EAAE,CACR;MACEN,IAAI,EAAE,SAAS;MACfC,OAAO,eAAEH,OAAA,CAACR,UAAU;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;MACvBE,MAAM,EAAEX;IACV,CAAC,EACD;MAAEI,IAAI,EAAE,kBAAkB;MAAEC,OAAO,eAAEH,OAAA,CAACP,eAAe;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE,CAAC,EAC1D;MAAEL,IAAI,EAAE,aAAa;MAAEC,OAAO,eAAEH,OAAA,CAACN,YAAY;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE,CAAC,EAClD;MAAEL,IAAI,EAAE,uBAAuB;MAAEC,OAAO,eAAEH,OAAA,CAACL,aAAa;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE,CAAC;EAEjE,CAAC;AAEL,CAAC,CACF,CAAC;;AAEF;AACA;AACA;AACA;;AAEA,SAASG,GAAGA,CAAA,EAAG;EACb,oBAAOV,OAAA,CAACV,cAAc;IAACW,MAAM,EAAEA;EAAO;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC3C;AAACI,EAAA,GAFQD,GAAG;AAIZ,eAAeA,GAAG;AAAC,IAAAC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}