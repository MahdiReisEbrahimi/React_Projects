{"ast":null,"code":"var _jsxFileName = \"/home/mehdi/Project-6/my-app/src/App.jsx\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport StudentCard from './StudentCards';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Node {\n  // constructor\n  constructor(name, studentNumber, userName, pass) {\n    this.name = name;\n    this.studentNumber = studentNumber;\n    this.userName = userName;\n    this.pass = pass;\n    this.next = null;\n  }\n}\n// linkedlist class\nclass LinkedList {\n  constructor() {\n    this.head = null;\n    this.size = 0;\n  }\n  add(name, studentNumber, userName, pass) {\n    // creates a new node\n    let node = new Node(name, studentNumber, userName, pass);\n    let current;\n    if (this.head == null) this.head = node;else {\n      current = this.head;\n      while (current.next) {\n        current = current.next;\n      }\n      current.next = node;\n    }\n    this.size++;\n  }\n  insertAt(name, studentNumber, userName, pass, index) {\n    if (index < 0 || index > this.size) return console.log(\"Please enter a valid index.\");else {\n      let node = new Node(name, studentNumber, userName, pass);\n      let curr, prev;\n      curr = this.head;\n      if (index == 0) {\n        node.next = this.head;\n        this.head = node;\n      } else {\n        curr = this.head;\n        let it = 0;\n        while (it < index) {\n          it++;\n          prev = curr;\n          curr = curr.next;\n        }\n        node.next = curr;\n        prev.next = node;\n      }\n      this.size++;\n    }\n  }\n  removeFrom(index) {\n    if (index < 0 || index >= this.size) return console.log(\"Please Enter a valid index\");else {\n      let curr,\n        prev,\n        it = 0;\n      curr = this.head;\n      prev = curr;\n\n      // deleting first element\n      if (index === 0) {\n        this.head = curr.next;\n      } else {\n        // iterate over the list to the\n        // position to remove an element\n        while (it < index) {\n          it++;\n          prev = curr;\n          curr = curr.next;\n        }\n\n        // remove the element\n        prev.next = curr.next;\n      }\n      this.size--;\n\n      // return the remove element\n      return curr.element;\n    }\n  }\n  removeElement(studentNumber) {\n    let current = this.head;\n    let prev = null;\n    while (current != null) {\n      if (current.studentNumber === studentNumber) {\n        if (prev == null) {\n          this.head = current.next;\n        } else {\n          prev.next = current.next;\n        }\n        this.size--;\n        return current.element;\n      }\n      prev = current;\n      current = current.next;\n    }\n    return -1;\n  }\n  indexOf(studentNumber) {\n    let count = 0;\n    let current = this.head;\n    while (current != null) {\n      if (current.studentNumber === studentNumber) return count;\n      count++;\n      current = current.next;\n    }\n    return -1;\n  }\n\n  // checks the list for empty\n  isEmpty() {\n    return this.size == 0;\n  }\n  size_of_list() {\n    console.log(this.size);\n  }\n  printList() {\n    let curr = this.head;\n    let str = \"\";\n    while (curr) {\n      str += curr.name + \" \";\n      curr = curr.next;\n    }\n    console.log(str);\n  }\n}\nlet students = new LinkedList();\nstudents.add(\"Mahdi\", 401243051, \"Mm350\", 1508185);\nstudents.add(\"Fam\", 422305152, \"Mm350\", 1508185);\nstudents.add(\"Mahdi\", 85974877, \"Mm350\", 1508185);\nstudents.add(\"Mahdi\", 695244585, \"Mm350\", 1508185);\nfunction App() {\n  _s();\n  const [student, setStudent] = useState(students);\n  const StudentCardDeleteListener = enteredId => {\n    console.log(enteredId);\n    let indexWhichShouldBeDeleted = -1;\n    for (let i = 0; i < student.length; i++) {\n      if (student[i].studentNum == enteredId) {\n        indexWhichShouldBeDeleted = i;\n        break;\n      }\n    }\n    const updatedStudent = [...student];\n    updatedStudent.splice(indexWhichShouldBeDeleted, 1);\n    setStudent(updatedStudent);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: students.map(student => /*#__PURE__*/_jsxDEV(StudentCard, {\n      onChange: StudentCardDeleteListener,\n      nameK: student.name,\n      passK: student.pass,\n      numberK: student.studentNum,\n      id: student.studentNum\n    }, student.studentNum, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"hPJznZV5IDTLyRf5UnnJ/Fhs67E=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["StudentCard","React","useState","jsxDEV","_jsxDEV","Node","constructor","name","studentNumber","userName","pass","next","LinkedList","head","size","add","node","current","insertAt","index","console","log","curr","prev","it","removeFrom","element","removeElement","indexOf","count","isEmpty","size_of_list","printList","str","students","App","_s","student","setStudent","StudentCardDeleteListener","enteredId","indexWhichShouldBeDeleted","i","length","studentNum","updatedStudent","splice","className","children","map","onChange","nameK","passK","numberK","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/mehdi/Project-6/my-app/src/App.jsx"],"sourcesContent":["import './App.css';\nimport StudentCard from './StudentCards';\nimport React, { useState } from 'react';\n\nclass Node {\n  // constructor\n  constructor(name, studentNumber, userName , pass) {\n    this.name = name;\n    this.studentNumber = studentNumber;\n    this.userName = userName;\n    this.pass = pass;\n    this.next = null;\n  }\n}\n// linkedlist class\nclass LinkedList {\n  constructor() {\n    this.head = null;\n    this.size = 0;\n  }\n\n  add(name, studentNumber, userName , pass) {\n    // creates a new node\n    let node = new Node(name, studentNumber, userName , pass);\n    let current;\n\n    if (this.head == null)\n      this.head = node;\n    else {\n      current = this.head;\n      while (current.next) {\n        current = current.next;\n      }\n      current.next = node;\n    }\n    this.size++;\n  }\n\n  insertAt(name, studentNumber, userName , pass, index) {\n    if (index < 0 || index > this.size)\n      return console.log(\"Please enter a valid index.\");\n    else {\n      let node = new Node(name, studentNumber, userName , pass,);\n      let curr, prev;\n\n      curr = this.head;\n\n      if (index == 0) {\n        node.next = this.head;\n        this.head = node;\n      } else {\n        curr = this.head;\n        let it = 0;\n\n        while (it < index) {\n          it++;\n          prev = curr;\n          curr = curr.next;\n        }\n\n        node.next = curr;\n        prev.next = node;\n      }\n      this.size++;\n    }\n  }\n\n  removeFrom(index) {\n    if (index < 0 || index >= this.size)\n      return console.log(\"Please Enter a valid index\");\n    else {\n      let curr, prev, it = 0;\n      curr = this.head;\n      prev = curr;\n\n      // deleting first element\n      if (index === 0) {\n        this.head = curr.next;\n      } else {\n        // iterate over the list to the\n        // position to remove an element\n        while (it < index) {\n          it++;\n          prev = curr;\n          curr = curr.next;\n        }\n\n        // remove the element\n        prev.next = curr.next;\n      }\n      this.size--;\n\n      // return the remove element\n      return curr.element;\n    }\n  }\n\n  removeElement(studentNumber) {\n    let current = this.head;\n    let prev = null;\n\n    while (current != null) {\n      if (current.studentNumber === studentNumber) {\n        if (prev == null) {\n          this.head = current.next;\n        } else {\n          prev.next = current.next;\n        }\n        this.size--;\n        return current.element;\n      }\n      prev = current;\n      current = current.next;\n    }\n    return -1;\n  }\n\n  indexOf(studentNumber) {\n    let count = 0;\n    let current = this.head;\n\n    while (current != null) {\n      if (current.studentNumber === studentNumber)\n        return count;\n      count++;\n      current = current.next;\n    }\n    return -1;\n  }\n\n  // checks the list for empty\n  isEmpty() {\n    return this.size == 0;\n  }\n\n  size_of_list() {\n    console.log(this.size);\n  }\n\n  printList() {\n    let curr = this.head;\n    let str = \"\";\n    while (curr) {\n      str += curr.name + \" \";\n      curr = curr.next;\n    }\n    console.log(str);\n  }\n}\n\nlet students = new LinkedList();\n\nstudents.add(\"Mahdi\" , 401243051 , \"Mm350\" , 1508185);\nstudents.add(\"Fam\" , 422305152 , \"Mm350\" , 1508185);\nstudents.add(\"Mahdi\" , 85974877 , \"Mm350\" , 1508185);\nstudents.add(\"Mahdi\" , 695244585 , \"Mm350\" , 1508185);\n\n\nfunction App() {\n\n  const [student, setStudent] = useState(students);\n  const StudentCardDeleteListener = (enteredId) => {\n    console.log(enteredId);\n    let indexWhichShouldBeDeleted = -1\n    for (let i = 0; i < student.length; i++) {\n      if (student[i].studentNum == enteredId) {\n        indexWhichShouldBeDeleted = i;\n        break;\n      }\n    }\n    const updatedStudent = [...student];\n    updatedStudent.splice(indexWhichShouldBeDeleted, 1)\n    setStudent(updatedStudent);\n  }\n\n  return (\n    <div className='container'>\n      {\n        students.map(student => (\n          <StudentCard\n            onChange={StudentCardDeleteListener}\n            nameK={student.name}\n            passK={student.pass}\n            numberK={student.studentNum}\n            id={student.studentNum}\n            key={student.studentNum}\n          />\n        ))\n      }\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}